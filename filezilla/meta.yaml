- name: FileZilla
  title: FileZilla SourceForge downloads trojanized steal credentials.
  start_date: 2014-01-01 # Reports surfaced Jan/Feb 2014
  end_date: 2014-02-28 # Ongoing reports in Feb 2014
  license: GPL-2.0
  website: https://filezilla-project.org/
  repo: https://svn.filezilla-project.org/svn/FileZilla3/trunk # Official SVN
  attribution_type: unknown
  component_type: Application
  lang: C++ # Malware payload language varies
  cause: Compromise
  motive: Credential theft
  attack_vector: Server compromise # Mirror server
  transitive: false
  insertion_phase: distribution
  impact_type: Credential theft
  references:
    - https://blog.avast.com/2014/01/27/malformed-filezilla-ftp-client-with-login-stealer/ # Note: Dated Jan 27, refers to sightings then
    - https://sourceforge.net/blog/filezilla-project-reports-malware-bundling/
    - https://www.pcworld.com/article/2099892/filezilla-ftp-client-installers-reportedly-bundled-with-malware-on-sourceforge.html
    - https://superuser.com/questions/722205/does-filezilla-contain-a-virus # User discussions from Feb/Mar 2014
  versions: # Example versions reported affected
    - "3.7.3"
    - "3.5.3"
  synopsis: Malicious actors modified FileZilla installers hosted on SourceForge mirrors. Trojanized installers bundled malware designed to steal FTP/SFTP credentials.
  compromise_desc: Attackers compromised servers within the SourceForge mirror network that hosted downloads for projects like FileZilla. They took legitimate FileZilla installer files (reports mentioned both `.exe` and `.zip` archives) and repackaged them to include malware. Users downloading FileZilla from these compromised mirrors received these trojanized installers instead of the clean originals. This was distinct from SourceForge's controversial adware bundling practices.
  impact_desc: The malware included in the modified FileZilla installers was specifically crafted to steal FTP and SFTP login credentials (hostname, port, username, password) used within the FileZilla application. It would capture this data when users connected to servers and exfiltrate it, often encoded (e.g., Base64), to attacker-controlled servers via HTTP or other means. This gave attackers access to the users' remote servers. The trojanized FileZilla client itself remained fully functional to avoid suspicion.
